# Note:  Hyperparameters have been changed slightly from
# the paper to allow for things to easily run on 1 GPU

BASE_TASK_CONFIG_PATH: "configs/tasks/pointnav_mp3d_medium.yaml"
#BASE_TASK_CONFIG_PATH: "configs/tasks/pointnav_mp3d_small.yaml"
TRAINER_NAME: "bc"
ENV_NAME: "NavRLEnv"
SIMULATOR_GPU_ID: 0
TORCH_GPU_ID: 0
#VIDEO_OPTION: []
VIDEO_OPTION: ["disk"]  # Can be uncommented to generate videos.
TENSORBOARD_DIR: "tb"
VIDEO_DIR: "video_dir"
TEST_EPISODE_COUNT: -1  # Evaluate on all episodes if -1
EVAL_CKPT_PATH_DIR: "data/new_checkpoints/td3_bc"
NUM_PROCESSES: 1
SENSORS: ["DEPTH_SENSOR"]
CHECKPOINT_FOLDER: "data/new_checkpoints/td3_bc"
NUM_UPDATES: 1_000_000
LOG_INTERVAL: 25
CHECKPOINT_INTERVAL: 2000
SEED:  0  # Sets Gym, PyTorch and Numpy seeds

RL:
  POLICY:
    name: "PointNavResNetPolicy"
  TD3_BC:
    alpha: 2.5
    batch_size: 256
    buffer_size: 10000000
    device: cuda
    discount: 0.99
    eval_freq: 5000
    expl_noise: 0.1
    load_model: ''
    max_timesteps: 1000000
    eval_episodes: 100
    noise_clip: 0.5
    normalize: true
    normalize_reward: false
    policy_freq: 2
    policy_noise: 0.2
    seed: 0
    tau: 0.00005
    # other params
    load_full_dataset: True
    ignore_stop: True

# Wandb logging
PROJECT: "habitat"
GROUP: "SingleGoal"
NAME: "TD3_BC"
WANDB_KEY: "88503bf83ff0a806be0ebc012f36e98fb193348a"

MODEL:
  # selecting inputs to use
#  used_inputs: ["position", "heading_vec", "goal_position"]
  used_inputs: ["position", "heading_vec"]
  ablate_depth: False
  ablate_rgb: False
  num_recurrent_layers: 2
  rnn_type: "GRU"
  backbone: "resnet18"
  resnet_baseplanes: 32
  normalize_visual_inputs: False
  force_blind_policy: False
  embed_sge: True
  embed_goal_seg: False
  sem_seg_pred: True
  NO_VISION: False
  USE_SEMANTICS: False
  USE_PRED_SEMANTICS: False
  SWITCH_TO_PRED_SEMANTICS_UPDATE: 0
#  SEMANTIC_ENCODER:
#    rednet_ckpt: "data/rednet-models/rednet_semmap_mp3d_tuned.pth"
#    cnn_type: "ResnetSemSegEncoder"
#    output_size: 256
#    backbone: "resnet18"
#    train_encoder: True
#    embedding_size: 4
#    is_thda: False
#    num_classes: 29
  RGB_ENCODER:
    cnn_type: "ResnetRGBEncoder"
    output_size: 256
    backbone: "resnet18"
    train_encoder: True
  DEPTH_ENCODER:
    cnn_type: "VlnResnetDepthEncoder"
    output_size: 128
    backbone: "resnet50"
    trainable: False
    ddppo_checkpoint: "data/ddppo-models/gibson-2plus-resnet50.pth"
  STATE_ENCODER:
    hidden_size: 2048
    rnn_type: "GRU"
    num_recurrent_layers: 2
  SEQ2SEQ:
    use_prev_action: True
  PROGRESS_MONITOR:
    use: False
